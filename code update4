"use client";

import LoadIngPage from "@/components/loading";
import Image from "next/image";
import { useState, useRef, useEffect } from "react";


export default function Home() {
  const [isPlaying, setIsPlaying] = useState(false);
  const audioRef = useRef<HTMLAudioElement | null>(null); 
  const [c1Image, setC1Image] = useState("/assets/c1.png");
  const [c2Image, setC2Image] = useState("/assets/c2.png");
  const [ylb1Image, setYlb1Image] = useState("/assets/yl1.png");
  const [bluebImage, setBlueImage] = useState("/assets/blue.png");
  const [greenImage, setGreenImage] = useState("/assets/green.png");
  const [redImage, setRedImage] = useState("/assets/red.png");
  const [bottleImage, setBottleImage] = useState("/assets/bottle.png"); 
  const [bottleSearchImage, setBottleSearchImage] = useState("/assets/bottlesearch.png");
  const [gImage] = useState("/assets/g220.gif");
  const [showBig1, setShowBig1] = useState(true);
  const [showBig2, setShowBig2] = useState(true);
  const [showBig3, setShowBig3] = useState(true);
  const [showBig4, setShowBig4] = useState(true);
  const [showBig5, setShowBig5] = useState(true);
  const allImagesClicked = !showBig1 && !showBig2 && !showBig3 && !showBig4 && !showBig5;
  const [isMenuVisible, setIsMenuVisible] = useState(false);
  const [carPosition, setCarPosition] = useState(0); // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
  const [isFalling, setIsFalling] = useState(false);
  const [xPos, setXPos] = useState(0); // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏£‡∏ñ
  const [moved, setMoved] = useState(false); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡∏¢‡∏±‡∏ö‡∏ã‡πâ‡∏≥
  const [isLocked, setIsLocked] = useState(false); // ‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Ç‡∏ì‡∏∞‡∏£‡∏ñ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
  const [isTopicVisible, setIsTopicVisible] = useState(false);
  const [isTopicWaterVisible, setIsTopicWaterVisible] = useState(false);
  const [isTextWallVisible, setIsTextWallVisible] = useState(false);
  const [isTextGabageVisible, setIsTextGabageVisible] = useState(false);
  const [isTextTale1Visible, setIsTextTale1Visible] = useState(false);
  const [isTextTale2Visible, setIsTextTale2Visible] = useState(false);
  const [isTextBeachVisible, setIsTextBeachVisible] = useState(false);
  const [isPlasticTaoVisible, setIsPlasticTaoVisible] = useState(true);
  const [isPlasticTaoAnimating, setIsPlasticTaoAnimating] = useState(false);
  const [isGif, setIsGif] = useState(false);
  const [shifted, setShifted] = useState(false);
  const [isTypingVisible, setIsTypingVisible] = useState(true); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
  const [isMoved, setIsMoved] = useState(false); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
  
  
  const handleNewClick = () => {
    setIsMoved((prev) => !prev); // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á true/false
  };

  const handlePlasticTaoClick = () => {
    setIsPlasticTaoAnimating(true); // Trigger the animation
    setTimeout(() => {
      setIsPlasticTaoVisible(false); // Hide plastictao after animation
    }, 1500); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô (1.5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
  };

  useEffect(() => {
    const handleScroll = () => {
      // Existing scroll handling logic...
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);


  useEffect(() => {
    const handleScroll = () => {
      const topicElement = document.getElementById("topicImage");
      const topicWaterElement = document.getElementById("topicWaterImage");
      const textWallElement = document.getElementById("textWallImage");
      const textGabageElement = document.getElementById("textGabageImage");
      const textTale1Element = document.getElementById("textTale1Image");
      const textTale2Element = document.getElementById("textTale2Image");
      const textBeachElement = document.getElementById("textBeachImage");
      const windowHeight = window.innerHeight;

      if (topicElement) {
        const rect = topicElement.getBoundingClientRect();
        setIsTopicVisible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }

      if (topicWaterElement) {
        const rect = topicWaterElement.getBoundingClientRect();
        setIsTopicWaterVisible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }

      if (textWallElement) {
        const rect = textWallElement.getBoundingClientRect();
        setIsTextWallVisible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }

      if (textGabageElement) {
        const rect = textGabageElement.getBoundingClientRect();
        setIsTextGabageVisible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }

      if (textTale1Element) {
        const rect = textTale1Element.getBoundingClientRect();
        setIsTextTale1Visible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }

      if (textTale2Element) {
        const rect = textTale2Element.getBoundingClientRect();
        setIsTextTale2Visible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }

      if (textBeachElement) {
        const rect = textBeachElement.getBoundingClientRect();
        setIsTextBeachVisible(rect.top < windowHeight * 0.8 && rect.bottom > 0);
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);


  

  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 800 && !moved) {
        setIsLocked(true); // üîí ‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô
        setXPos(300); // üöó ‡∏Ç‡∏¢‡∏±‡∏ö‡πÑ‡∏õ 300px
        setMoved(true); // ‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡∏¢‡∏±‡∏ö‡∏ã‡πâ‡∏≥

        // üìú ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏•‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á 2000px ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å
        setTimeout(() => {
          window.scrollTo({
            top: 2000,
            behavior: "smooth",
          });

          // üîì ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
          setTimeout(() => {
            setIsLocked(false);
          }, 1000);
        }, 1000);
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, [moved]);

  useEffect(() => {
    if (isLocked) {
      document.body.style.overflow = "hidden";
    } else {
      document.body.style.overflow = "auto";
    }
  }, [isLocked]);

  const handleSealClick = () => {
    setIsFalling(true);
    setTimeout(() => {
      setIsFalling(false); // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    }, 5000);
  };

  const handleScrollTop = () => {
    window.scrollTo({ top: 850, behavior: "smooth" }); // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏ö‡∏ô‡∏™‡∏∏‡∏î
  };
  const handleScrollDown = () => {
    window.scrollTo({ top: 5000, behavior: "smooth" }); // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á 5000px
  };
  const handleScrollToBottom = () => {
    window.scrollTo({ top: document.body.scrollHeight, behavior: "smooth" }); // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤
  };


  const moveCar = () => {
    setCarPosition((prev) => {
      if (prev === 0) {
        // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ 1300px
        return 1300;
      } else if (prev === 1300) {
        // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà 1300px ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        return 0;
      }
      return prev;
    });
  };

  const toggleMenu = () => {
    setIsMenuVisible(!isMenuVisible); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  };
  useEffect(() => {
    return () => {
      if (audioRef.current) {
        audioRef.current.pause();
      }
    };
  }, []);
  

  const togglePlay = () => {
    if (audioRef.current) {
      if (isPlaying) {
        audioRef.current.pause();
      } else {
        audioRef.current.play();
      }
      setIsPlaying(!isPlaying);
    }
  };

  const toggleC1Image = () => {
    setC1Image((prev) => (prev === "/assets/c1.png" ? "/assets/cb1.png" : "/assets/c1.png"));
  };

  const toggleC2Image = () => {
    setC2Image((prev) => (prev === "/assets/c2.png" ? "/assets/cb2.png" : "/assets/c2.png"));
  };

  const toggleYlb1Image = () => {
    setYlb1Image((prev) => (prev === "/assets/yl1.png" ? "/assets/ylb1.png" : "/assets/yl1.png"));
  };

  const toggleBlueImage = () => {
    setBlueImage((prev) => (prev === "/assets/blue.png" ? "/assets/blueb.png" : "/assets/blue.png"));
  };

  const toggleGreenImage = () => {
    setGreenImage((prev) => (prev === "/assets/green.png" ? "/assets/greenb.png" : "/assets/green.png"));
  };

  const toggleRedImage = () => {
    setRedImage((prev) => (prev === "/assets/red.png" ? "/assets/redb.png" : "/assets/red.png"));
  };

  const toggleBottleImage = () => {
    setBottleImage((prev) => (prev === "/assets/bottle.png" ? "/assets/bottleblack.png" : "/assets/bottle.png"));
  };
  const toggleBottleSearchImage = () => {
    setBottleSearchImage((prev) => prev === "/assets/bottlesearch.png" ? "/assets/bottlesearchblack.png" : "/assets/bottlesearch.png");
  };
  const handleFlaskClick = () => {
    setShifted((prev) => !prev); // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á true/false
    setIsTypingVisible((prev) => !prev); // ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á typing ‡πÅ‡∏•‡∏∞ text1
  };

  

  return (
    <div id="home" className="w-full relative">
      <LoadIngPage />
  
      <Image
        src="/assets/home.jpg"
        alt="home"
        width={1920}
        height={1000}
        priority
      />
        <img
        id="topicImage"
        src="/assets/topic.png"
        alt="topic"
        width={500}
        height={500}
        className={`absolute top-[850px] right-[550px] transition-transform duration-500 ease-out 
          ${isTopicVisible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />
      <Image
        src="/assets/paiwood.png"
        alt="paiwood"
        width={150}
        height={150}
        className="absolute top-[1400px] right-[770px]"
      />
         <Image
      src="/assets/car.png"
      alt="car"
      width={150}
      height={150}
      className="absolute top-[1220px] right-[1050px]"
      style={{
        position: "absolute",
        transform: `translateX(${xPos}px)`,
        transition: "transform 1s ease-in-out"
      }}
    />
       <Image
        src="/assets/down.png"
        alt="down"
        width={70}
        height={70}
        className="absolute top-[1400px] right-[680px] animate-[bounce_1s_infinite]"
      />

      <button
        onClick={togglePlay}
        className="fixed top-24 right-4 w-12 h-12 bg-transparent z-50 flex flex-col items-center gap-2"
      >
        <Image
          src={isPlaying ? "/assets/sound1.png" : "/assets/sound-stop.png"}
          alt="sound icon"
          width={50}
          height={50}
        />
      </button>

      <div
        onClick={toggleMenu}
        className="fixed top-4 right-4 w-12 h-12 bg-transparent z-50 flex flex-col items-center gap-2 cursor-pointer "
      >
        <Image
          src="/assets/menu.png"
          alt="menu"
          width={200}
          height={200}
        />
      </div>

    
    <div>
     
    {isMenuVisible && (
  <div className="fixed top-4 right-20 bg-transparent z-50 flex flex-col items-center ">
    
      <Image
        src="/assets/main.png"
        alt="main"
        width={200}
        height={200}
        className="cursor-pointer image-hover-scale"
        onClick={handleScrollTop}
      />
     <Image
            src="/assets/effect.png"
            alt="effect"
            width={200}
            height={200}
            className="cursor-pointer image-hover-scale"
            onClick={handleScrollDown} // ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á 4150px
          />
   <Image
            src="/assets/howto.png"
            alt="howto"
            width={200}
            height={200}
            className="cursor-pointer image-hover-scale"
            onClick={handleScrollToBottom} // ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
          />
  </div>
)}
    </div>
    
        <audio 
          ref={audioRef} 
          src="/assets/music.mp3" 
          loop 
        />

        <div className="relative">
          <Image 
            src="/assets/water2.jpg" 
            alt="images" 
            width={1920} 
            height={1000} 
          />
         <img
        id="topicWaterImage"
        src="/assets/topicwater.png"
        alt="topicwater"
        width={1000}
        height={1000}
        className={`absolute top-6 left-72 transition-transform duration-500 ease-out 
          ${isTopicWaterVisible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />
           <Image
            src="/assets/bt.png"
            alt="images"
            width={500}
            height={500}
            className="absolute top-[200px] left-[600px] transform  transition-opacity duration-300 hover:opacity-0 animate-[wiggle_1s_ease-in-out_infinite]"
          />
          <Image
            src="/assets/textbt.png"
            alt="image"
            width={1500}
            height={1500}
            className="absolute top-2/4 left-1/2 transform -translate-x-1/2 -translate-y-1/2 transition-opacity duration-300 opacity-0 hover:opacity-100"
          />
        </div>

        <div className="relative mt-0 flex flex-col items-center">
          <Image 
            src="/assets/what.jpg" 
            alt="New Image"
            width={1920}
            height={1000} 
            className="w-full h-full" 
          />
          <Image 
        src="/assets/question.png" 
        alt="question"
        width={100}
        height={100} 
        className="absolute top-[200px] right-[500px] animate-[wiggle_0.5s_ease-in-out_infinite]"
/>

          <div className="absolute top-96 right-20 flex flex-col items-center gap-6">
  <Image 
    src={c1Image} 
    alt="c1 image" 
    width={500} 
    height={500} 
    onClick={toggleC1Image} 
    className="cursor-pointer image-hover-scale hover:opacity-80 active:scale-95 transition-all" 
    title="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C1 Image"  // ‡πÄ‡∏û‡∏¥‡πà‡∏° tooltip ‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover
  />
  <Image 
    src={c2Image} 
    alt="c2 image" 
    width={500} 
    height={500} 
    onClick={toggleC2Image} 
    className="cursor-pointer image-hover-scale hover:opacity-80 active:scale-95 transition-all" 
    title="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C2 Image"  // ‡πÄ‡∏û‡∏¥‡πà‡∏° tooltip ‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover
  />
</div> 
        </div>

        <div className="relative mt-0">
          <Image 
            src="/assets/wall3.jpg" 
            alt="wall3" 
            width={1920} 
            height={1000} 
            className="object-cover w-full h-full" 
          />
          <img
        id="textWallImage"
        src="/assets/textwall3.png"
        alt="textwall3"
        width={1000}
        height={1000}
        className={`absolute top-10 left-80 transition-transform duration-500 ease-out 
          ${isTextWallVisible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />
          <Image 
            src={ylb1Image} 
            alt="ylb1 image" 
            width={250} 
            height={250} 
            className="absolute left-[150px] top-44 object-cover image-hover-scale" 
            onClick={toggleYlb1Image} 
          />
          <Image 
            src={bluebImage} 
            alt="blue" 
            width={250} 
            height={250} 
            className="absolute left-[480px] top-44 object-cover transform  rotate-10 image-hover-scale" 
            onClick={toggleBlueImage} 
          />
          <Image 
            src={greenImage} 
            alt="green" 
            width={250} 
            height={250} 
            className="absolute right-[500px] top-44 object-cover transform rotate-10 image-hover-scale" 
            onClick={toggleGreenImage} 
          />
          <Image 
            src={redImage} 
            alt="red" 
            width={250} 
            height={250} 
            className="absolute right-[160px] top-44 object-cover transform rotate-10 image-hover-scale " 
            onClick={toggleRedImage} 
          />
        </div>

        <div className="relative mt-0">
        <Image 
            src="/assets/gabage.jpg" 
            alt="gabage" 
            width={1920} 
            height={1000} 
            className="object-cover w-full h-full" 
          />
          <img
        id="textGabageImage"
        src="/assets/textgabage.png"
        alt="textgabage"
        width={700}
        height={700}
        className={`absolute top-20 right-16 transition-transform duration-500 ease-out 
          ${isTextGabageVisible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />
          <Image 
            src={bottleImage} 
            alt="bottle" 
            width={800} 
            height={800} 
            className="absolute top-56 left-52 image-hover-scale" 
            onClick={toggleBottleImage}
          />
          <Image 
            src={bottleSearchImage} 
            alt="bottlesearch" 
            width={1000} 
            height={1000} 
            className="absolute top-[750px] left-52 cursor-pointer image-hover-scale" 
            onClick={toggleBottleSearchImage} 
          />
           <div className="relative mt-0">
          <Image 
            src="/assets/tale.jpg" 
            alt="tale" 
            width={1920} 
            height={1000} 
            className="object-cover w-full h-full" 
          />
         
          <img
      src={isGif ? "/assets/wefish.gif" : "/assets/wefish.png"}
      alt="wefish"
      width={350}
      height={350}
      className="absolute top-[1750px] left-[310px] animate-[wiggle_1s_ease-in-out_infinite]"
      onClick={() => setIsGif(true)}
    />
       
          {/* ‡∏†‡∏≤‡∏û taonoi */}
          <img
        src="/assets/taonoi.png"
        alt="taonoi"
        width={300}
        height={300}
        className="absolute top-[1600px] left-[1000px] animate-[wiggle_1s_ease-in-out_infinite]"
      />

      {/* ‡∏†‡∏≤‡∏û plastictao */}
      {isPlasticTaoVisible && (
        <img
          src="/assets/plastictao.png"
          alt="plastictao"
          width={250}
          height={250}
          className={`absolute top-[1600px] left-[1000px] transition-transform duration-1500 ease-out animate-[wiggle_1s_ease-in-out_infinite]
            ${isPlasticTaoAnimating ? "translate-y-[-100px] opacity-0" : ""}`} // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 1500ms
          onClick={handlePlasticTaoClick} // Move the click event here
        />
      )}
            <img
        id="textTale1Image"
        src="/assets/texttale1.png"
        alt="texttale1"
        width={700}
        height={700}
        className={`absolute top-[480px] right-80 cursor-pointer transition-transform duration-500 ease-out 
          ${isTextTale1Visible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />

      <img
        id="textTale2Image"
        src="/assets/texttale2.png"
        alt="texttale2"
        width={700}
        height={700}
        className={`absolute top-[1350px] left-44 cursor-pointer transition-transform duration-500 ease-out 
          ${isTextTale2Visible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />
          <Image 
          src={gImage} 
          alt="g220" 
          width={400} 
          height={400} 
          className="absolute top-[480px] left-24 cursor-pointer" 
        />
        <Image 
          src="/assets/gback220.gif" 
          alt="gback220" 
          width={400} 
          height={400} 
          className="absolute top-[480px] left-24 cursor-pointer transition-opacity duration-300 opacity-0 hover:opacity-100" 
        />
        <Image 
          src="/assets/openbottle.gif" 
          alt="openbottle" 
          width={400} 
          height={400} 
          className="absolute top-[900px] right-28 cursor-pointer transition-opacity duration-300 hover:opacity-0" 
        />
        <Image 
          src="/assets/openbottleback.gif" 
          alt="openbottleback" 
          width={400} 
          height={400} 
          className="absolute top-[900px] right-28 cursor-pointer transition-opacity duration-300 opacity-0 hover:opacity-100" 
        />
        <Image 
          src="/assets/tao.gif" 
          alt="openbottle" 
          width={400} 
          height={400} 
          className="absolute top-[900px] right-[700px] cursor-pointer transition-opacity duration-300 hover:opacity-0" 
        />
        <Image 
          src="/assets/taoback.gif" 
          alt="openbottleback" 
          width={400} 
          height={400} 
          className="absolute top-[900px] right-[700px] cursor-pointer transition-opacity duration-300 opacity-0 hover:opacity-100" 
        />
        <div className="relative mt-0">
          <Image 
            src="/assets/beach.jpg" 
            alt="beach" 
            width={1920} 
            height={1000} 
            className="object-cover w-full h-full" 
          />
          
          <img
        id="textBeachImage"
        src="/assets/textbeach.png"
        alt="textbeach"
        width={700}
        height={700}
        className={`absolute top-[1300px] left-[780px] transition-transform duration-500 ease-out 
          ${isTextBeachVisible ? "scale-100 opacity-100" : "scale-50 opacity-0"}`}
      />
          <Image
        src="/assets/wan.png"
        alt="seal"
        width={500}
        height={500}
        className="absolute top-[150px] left-[700px] cursor-pointer transition-opacity duration-300 animate-[wiggle_1s_ease-in-out_infinite]"
        
      />
          <div>
      {/* Seal */}
      <Image
        src="/assets/seal.png"
        alt="seal"
        width={500}
        height={500}
        className="absolute top-[1200px] left-[200px] cursor-pointer transition-opacity duration-300 animate-[wiggle_1s_ease-in-out_infinite]"
        onClick={handleSealClick}
      />

{/* Big images */}
{["big1", "big2", "big3", "big4", "big5", "big2", "big3", "big1"].map((name, index) => (
  <Image
    key={index}
    src={`/assets/${name}.png`}
    alt={name}
    width={150}
    height={150}
    className={`absolute top-[1000px] ${index >= 6 ? `right-[${index === 6 ? 20 : 200}px]` : `left-[${200 + index * 200}px]`} 
      cursor-pointer transition-all duration-[2000ms] ${isFalling ? "translate-y-[800px] opacity-0" : ""}`}
  />
))}

    </div>
          <Image 
            src="/assets/clock.gif" 
            alt="clock" 
            width={400} 
            height={400} 
            className="absolute top-[500px] left-[250px] cursor-pointer transition-opacity duration-300 hover:opacity-0" 
          />
          <Image 
            src="/assets/clockback.gif" 
            alt="clockback" 
            width={400} 
            height={400} 
            className="absolute top-[500px] left-[250px] cursor-pointer transition-opacity duration-300 opacity-0 hover:opacity-100" 
          />
          <div className="relative mt-0">
          <Image 
            src="/assets/sai.jpg" 
            alt="sai" 
            width={1920} 
            height={1000} 
            className="object-cover w-full h-full" 
          />
           
          {showBig1 && (
          <Image 
            src="/assets/big1.png" 
            alt="big1" 
            width={200} 
            height={200} 
            className="absolute top-[100px] left-[250px] cursor-pointer transition-opacity duration-300 animate-bounce" 
            onClick={() => setShowBig1(false)}
          />
        )}
        {showBig2 && (
          <Image 
            src="/assets/big2.png" 
            alt="big2" 
            width={200} 
            height={200} 
            className="absolute top-[450px] left-[300px] cursor-pointer transition-opacity duration-300 animate-bounce" 
            onClick={() => setShowBig2(false)}
          />
        )}
        {showBig3 && (
          <Image 
            src="/assets/big3.png" 
            alt="big3" 
            width={200} 
            height={200} 
            className="absolute top-[500px] right-[250px] cursor-pointer transition-opacity duration-300 animate-bounce " 
            onClick={() => setShowBig3(false)}
          />
        )}
        {showBig4 && (
          <Image 
            src="/assets/big4.png" 
            alt="big4" 
            width={200} 
            height={200} 
            className="absolute top-[150px] right-[350px] cursor-pointer transition-opacity duration-300 animate-bounce" 
            onClick={() => setShowBig4(false)}
          />
        )}
        {showBig5 && (
          <Image 
            src="/assets/big5.png" 
            alt="big5" 
            width={150} 
            height={150} 
            className="absolute top-[300px] right-[800px] cursor-pointer transition-opacity duration-300 animate-bounce" 
            onClick={() => setShowBig5(false)}
          />
        )}
         {allImagesClicked && (
          <Image 
            src="/assets/thankyou.png" 
            alt="thankyou" 
            width={1000} 
            height={1000} 
            className="absolute top-[180px] right-[400px] cursor-pointer transition-opacity duration-300" 
          />
        )}
          </div>
          </div>
          <div className="w-full h-screen overflow-x-scroll relative">
      <div
        className="absolute top-0 left-0 h-full  flex transition-transform duration-300"
        style={{ transform: `translateX(-${carPosition}px)` }}
      >
        <Image 
          src="/assets/street.jpg" 
          alt="street" 
          width={1920} 
          height={1000} 
          className="object-cover w-[1920px] h-full" 
        />
        <Image 
          src="/assets/street2.jpg" 
          alt="street2" 
          width={1920} 
          height={1000} 
          className="object-cover w-[1920px] h-full" 
        />
        
        <Image 
          src="/assets/recycle1.jpg" 
          alt="recycle1" 
          width={1920} 
          height={1000} 
          className="object-cover w-[1920px] h-full" 
        />
         <Image 
          src="/assets/recycle12.jpg" 
          alt="recycle12" 
          width={1920} 
          height={1000} 
          className="object-cover w-[1920px] h-full" 
        />
         <Image 
          src="/assets/lang.png" 
          alt="lang" 
          width={800} 
          height={800} 
          className="absolute top-[575px] left-[3700px]" 
        />
          <img
        src="/assets/btsleep.png"
        alt="btsleep"
        width={900}
        height={900}
        className={`absolute top-[590px] left-[3750px] cursor-pointer transition-transform duration-1000 ${
          shifted ? "translate-x-[300px]" : "translate-x-0"
        }`}
        onClick={handleFlaskClick}
      />
         {isTypingVisible ? ( // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
        <img
          src="/assets/typing.gif"
          alt="typing"
          width={700}
          height={700}
          className="absolute top-[300px] left-[3750px]"
        />
      ) : (
        <img
        src="/assets/text1.png"
        alt="text1"
        width={700}
        height={700}
        className="absolute top-[240px] left-[3750px]"
      />
    )}
    <Image 
        src="/assets/plasbottleone.png" 
        alt="pbtone" 
        width={350} 
        height={350} 
        className="absolute top-[160px] left-[4500px]" 
      />
      <Image 
        src="/assets/typing.gif" 
        alt="typing" 
        width={700} 
        height={700} 
        className="absolute top-[100px] left-[5000px]" 
      />
      <Image 
        src="/assets/text2.png" 
        alt="text2" 
        width={700} 
        height={700} 
        className="absolute top-[40px] left-[5005px]" 
      />
       <img
        src="/assets/new.png"
        alt="new"
        width={1000}
        height={1000}
        className="absolute top-[280px] left-[4850px] cursor-pointer" // ‡πÉ‡∏ä‡πâ cursor-pointer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ
        onClick={handleNewClick} // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ
      />
      <img
        src="/assets/btpt.png"
        alt="btpt"
        width={40}
        height={40}
        className={`absolute top-[400px] left-[5250px] transition-transform duration-1000 ${
          isMoved ? "translate-x-[500px]" : "translate-x-0"
        }`} // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ isMoved ‡πÄ‡∏õ‡πá‡∏ô true
      />
       <Image 
        src="/assets/wallnew.jpg" 
        alt="wallnew" 
        width={1920} 
          height={1000} 
          className="object-cover w-[1920px] h-full" 
      />
       <Image 
        src="/assets/textwallnew.png" 
        alt="textwallnew" 
        width={600} 
          height={600} 
          className="absolute top-[60px] left-[6380px]" 
      />
    </div>

    <div className="absolute top-[200px] left-[30px] cursor-pointer" onClick={moveCar}>
        <Image 
          src="/assets/car.png" 
          alt="car" 
          width={700} 
          height={700} 
        />
      </div>

          </div> 
          </div> 
        </div> 
      </div>
  );
} 
